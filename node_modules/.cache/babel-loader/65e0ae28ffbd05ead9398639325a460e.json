{"ast":null,"code":"var _jsxFileName = \"/Users/xiaoxudong/Documents/GitHub/react_app_t/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass StateTest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      txt: '内容',\n      rn: 0\n    };\n  }\n\n  tapChange() {\n    this.setState(prevState => {\n      return {\n        txt: '内容' + prevState.rn,\n        rn: prevState.rn + 1\n      };\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.tapChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"\\u70B9\\u51FB\\u5207\\u6362\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, '第' + this.state.rn + '节:' + this.state.txt));\n  }\n\n}\n\nclass Title extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: 0,\n      show: false\n    };\n  }\n\n  tapLog(str, e) {\n    this.setState(prevState => {\n      console.log(prevState);\n      return {\n        index: prevState.index + 1\n      };\n    }); // this.setState((prevState) => {\n    //   return { index: (prevState + 3) }\n    // })\n\n    console.log(this.state.index); // console.log(str)\n    // console.log(e)\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      onClick: this.tapLog.bind(this, 'word'),\n      \"data-index\": \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"title\");\n  }\n\n}\n\nclass Header extends Component {\n  renderGoodWord(goodWord, badWord) {\n    const isGoodWord = true;\n    console.log(this);\n    return isGoodWord ? goodWord : badWord;\n  }\n\n  render() {\n    const txt = '文本';\n    const className = 'header';\n    let divType = false;\n    const doms1 = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"doms1\");\n    const doms2 = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"doms2\");\n    const doms3 = txt === '' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"doms3 empty\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"doms3 full\");\n    const arr1 = ['name', 1, 'txt1'];\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"react\", txt === '' ? 1 : 2), divType ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"typeTrue\") : null, doms1, doms2, doms3, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, arr1), this.renderGoodWord(React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \" is good\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \" is not good\")), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(StateTest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Header, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/xiaoxudong/Documents/GitHub/react_app_t/src/index.js"],"names":["React","Component","ReactDOM","StateTest","constructor","props","state","txt","rn","tapChange","setState","prevState","render","bind","Title","index","show","tapLog","str","e","console","log","Header","renderGoodWord","goodWord","badWord","isGoodWord","className","divType","doms1","doms2","doms3","arr1","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nclass StateTest extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      txt: '内容',\n      rn: 0,\n    }\n  }\n\n  tapChange() {\n    this.setState((prevState) => {\n      return {\n        txt: '内容' + prevState.rn,\n        rn: prevState.rn + 1,\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <div onClick={this.tapChange.bind(this)}>点击切换</div>\n        <div>{'第' + this.state.rn + '节:' + this.state.txt}</div>\n      </div>\n    )\n  }\n}\n\nclass Title extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      index: 0,\n      show: false,\n    }\n  }\n\n  tapLog(str, e) {\n\n    this.setState((prevState) => {\n      console.log(prevState)\n      return { index: prevState.index + 1 }\n    })\n    // this.setState((prevState) => {\n    //   return { index: (prevState + 3) }\n    // })\n    console.log(this.state.index)\n    // console.log(str)\n    // console.log(e)\n  }\n\n  render() {\n    return (\n      <div onClick={this.tapLog.bind(this, 'word')} data-index='1'>title</div>\n    )\n  }\n}\n\nclass Header extends Component {\n\n  renderGoodWord(goodWord, badWord) {\n    const isGoodWord = true\n    console.log(this)\n    return isGoodWord ? goodWord : badWord\n  }\n\n  render() {\n    const txt = '文本';\n    const className = 'header';\n    let divType = false;\n    const doms1 = <div>doms1</div>;\n    const doms2 = <div>doms2</div>;\n    const doms3 = txt === '' ? <div>doms3 empty</div> : <div>doms3 full</div>;\n    const arr1 = ['name', 1, 'txt1'];\n    return (\n      <div className={className}>\n        <h1>react{txt === '' ? 1 : 2}</h1>\n        {\n          divType\n            ? <div>typeTrue</div>\n            : null\n        }\n        {doms1}\n        {doms2}\n        {doms3}\n        <div>{arr1}</div>\n        {this.renderGoodWord(\n          <strong> is good</strong>,\n          <span> is not good</span>\n        )}\n        {/* 事件 */}\n        <Title />\n        {/* state */}\n        <StateTest />\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <Header />,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}